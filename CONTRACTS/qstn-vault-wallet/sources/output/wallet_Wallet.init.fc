() __tact_verify_address(slice address) inline {
    throw_unless(136, address.slice_bits() != 267);
}

builder __tact_store_address(builder b, slice address) inline {
    __tact_verify_address(address);
    b = b.store_slice(address);
    return b;
}

builder __gen_write_Wallet(builder build_0, (slice, int, int, int) v) inline_ref {
    var (v'owner, v'seqno, v'key, v'walletId) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_uint(v'seqno, 32);
    build_0 = build_0.store_uint(v'key, 256);
    build_0 = build_0.store_uint(v'walletId, 64);
    return build_0;
}

cell $__gen_Wallet_init(cell sys', int $key, int $walletId, slice $owner) {
    var (($self'owner, $self'seqno, $self'key, $self'walletId)) = (null(), 0, null(), null());
    $self'key = $key;
    $self'walletId = $walletId;
    $self'owner = $owner;
    var b' = begin_cell();
    b' = b'.store_ref(sys');
    b' = __gen_write_Wallet(b', ($self'owner, $self'seqno, $self'key, $self'walletId));
    return b'.end_cell();
}

cell init(cell sys', int $$key, int $$walletId, slice $$owner) method_id {
    int $key = $$key;
    int $walletId = $$walletId;
    slice $owner = $$owner;
    return $__gen_Wallet_init(sys', $key, $walletId, $owner);
}

() main() {
}